def simons_sequence_add():
	randie_inty_boi = random.randint(0, len(Setup.button_list) -1)
	return(Setup.button_list[randie_inty_boi])
def the_game():
	sequence = []
	player_input = []
	im_done = 0
	while im_done != 1:
		player_input.clear()
		sequence.append(simons_sequence_add())
		index = 0
		for button in sequence:
			button.ledOn()
			sleep(.75)
			button.ledOff()
			sleep(.18)
		while len(player_input) < len(sequence):
			for button in Setup.button_list:
				if button.is_pressed:
					button.ledOn()
					sleep(.1)
					button.ledOff()
					player_input.append(button)
					if player_input[index] != sequence[index]:
						im_done = 1
						Setup.flashAll(3)
						break
					index += 1
					sleep(.2)
the_game()


	def quickBlink(self):
		self.ledOn()
		sleep(.12)
		self.ledOff()



def simons_sequence_add():
	'''Adds the next button to the game'''
	return(Setup.button_list[random.randint(0, len(Setup.button_list) -1)])

def simon_says_game():
	'''Main loop of the game'''
	sequence = []
	while True:
		sequence.append(simons_sequence_add())
		for button in sequence:
			button.ledOn()
			sleep(.75)
			button.ledOff()
			sleep(.18)
		player_input()

def player_input(sequence):
	'''What happens on the players turn'''
	player_input = []
	index = 0
	while len(player_input) < len(sequence):
		for button in Setup.button_list:
			if button.is_pressed:
				button.quickBlink
				player_input.append(button)
				if player_input[index] != sequence[index]:
					Setup.flashAll(3)
					return False
				index += 1
				sleep(.2)


simon_says_game()
